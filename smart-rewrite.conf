### Configuration for Apache webserver
#
# Up-to-date information available on:
#    https://github.com/paderijk/httpd-ssl-smart-rewrite-based-on-cert
#
# 20170426 - Pieter de Rijk - https://github.com/paderijk
#   - Allow to used letsencrypt well-known
#   - Rewrite from http to HTTPS
#   - Checks based on the Spool file if there is an SSL-Certificate for a hostname
# 20170510 - Pieter de Rijk - https://github/paderijk
#   - Added correct rewrite for CloudFlare
#
# This needs to be included in a host configuration file
#
# So add:
# Include /etc/httpd/conf/extra/smart-rewrite.conf

## LetsEncrypt Support
alias /.well-known /var/www/html/.well-known/
<Directory /var/www/html/.well-known/>
  Order allow,deny
  Allow from all
</Directory>

#### CloudFlare supported rewrite
## Start the rewriting rules
RewriteEngine on
# Check if the %{HTTP_HOST} has an entry in the spool
RewriteCond /var/spool/pki/san/%{HTTP_HOST}-san -f
# CloudFlare visitors
RewriteCond %{HTTP:CF-Visitor} '"scheme":"http"'
# Avoid rewriting of the .well-known URLs
RewriteCond %{REQUEST_URI} !^/\.well-known
# If everything is OK, do a rewrite from (for example) 
# http://github.com to https://github.com
RewriteRule ^.*$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R]

#### Generic rewrite
## Start the rewriting rules
RewriteEngine on
# Check if the %{HTTP_HOST} has an entry in the spool
RewriteCond /var/spool/pki/san/%{HTTP_HOST}-san -f
# Avoid rewriting of the .well-known URLs
RewriteCond %{REQUEST_URI} !^/\.well-known
# If everything is OK, do a rewrite from (for example) 
# http://github.com to https://github.com
RewriteRule ^.*$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R]
